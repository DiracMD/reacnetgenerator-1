(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{374:function(e,t,a){"use strict";a.r(t);var r=a(45),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"api-of-reacnetgenerator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-of-reacnetgenerator"}},[e._v("#")]),e._v(" API of ReacNetGenerator")]),e._v(" "),a("h2",{attrs:{id:"reacnetgenerator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reacnetgenerator"}},[e._v("#")]),e._v(" "),a("code",[e._v("reacnetgenerator")])]),e._v(" "),a("p",[e._v("ReacNetGenerator is an automatic reaction network generator for\nreactive molecular dynamics simulation.")]),e._v(" "),a("h3",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[e._v("#")]),e._v(" Notes")]),e._v(" "),a("p",[e._v("Please cite: ReacNetGenerator: an automatic reaction network generator\nfor reactive molecular dynamic simulations, Phys. Chem. Chem. Phys.,\n2020, 22 (2): 683–691, doi: 10.1039/C9CP05091D")]),e._v(" "),a("h3",{attrs:{id:"class-reacnetgenerator-reacnetgenerator-kwargs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-reacnetgenerator-reacnetgenerator-kwargs"}},[e._v("#")]),e._v(" class reacnetgenerator.ReacNetGenerator(**kwargs)")]),e._v(" "),a("p",[e._v("Use ReacNetGenerator for trajectory analysis.")]),e._v(" "),a("p",[e._v("inputfiletype: str")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("The type of the input file. The following type is allowed:\n\\* dump: LAMMPS dump file, which can be outputed by using \n\n```\n`\n```\n\ndump 1 all custom 100 dump.reaxc\n\n> id type x y z\\`. See [https://lammps.sandia.gov/doc/dump.html](https://lammps.sandia.gov/doc/dump.html) for details.\n\n\n* bond: LAMMPS ReaxFF bond file. See [https://lammps.sandia.gov/doc/fix_reaxc_bonds.html](https://lammps.sandia.gov/doc/fix_reaxc_bonds.html)\nfor details.\n\n\n* xyz: XYZ file, which can also be outputed by LAMMPS using dump.\n")])])]),a("p",[e._v("inputfilename: str or list of strs")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("The filename(s) of the input file, which can be either relative path or absolute path. If\nit is a list, the files will be read in order.\n")])])]),a("p",[e._v("atomname: tuple of strs")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("The list of the atomic names in the input file, such as (‘C’, ‘H’, ‘O’). It should match\nthe order of that in the input file.\n")])])]),a("p",[e._v("runHMM: bool, optional, default: True")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Process trajectory with Hidden Markov Model (HMM) or not. If the user find too many species\nare filtered, they can turn off this option.\n")])])]),a("p",[e._v("pbc: bool, optional, default: True")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Use periodic boundary conditions (PBC) or not.\n")])])]),a("p",[e._v("cell: (3,3) array_like or (3,) array_like, optional, default: None")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("The cell (box size) of the system. If None (default), the cell will be read from the input\nfile. If the input file doesn’t have cell information, this parameter will be necessary.\n")])])]),a("p",[e._v("nproc: int, optional, default: None")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("The number of processors used for analysis. If None (default), the program will try to use\nall processors.\n")])])]),a("p",[e._v("selectatoms: str, optional, default: None")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Select an element from the atomic names, such as C, and only show species with this\nelement in the reaction network. If None (default), the network will show all elements.\n")])])]),a("p",[e._v("split: int, optional, default: None")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Split number for the time axis. For example, if set to 10, the whole trajectroy will\nbe divided into 10 parts and reactions of each part will be shown.\n")])])]),a("p",[e._v("a: (2,2) array_like, optional, default: [[0.999, 0.001], [0.001, 0.009]]")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Transition matrix A of HMM parameters. It is recommended for users to choose their own\nparameters. See the paper for details.\n")])])]),a("p",[e._v("b: (2,2) array_like, optional, default: [[0.6, 0.4], [0.4, 0.6]]")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Emission matrix B of HMM parameters. It is recommended for users to choose their own\nparameters. See the paper for details.\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" reacnetgenerator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" ReacNetGenerator\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" rng"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("ReacNetGenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("inputfiletype"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dump"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" inputfilename"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dump.ch4"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" atomname"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'H'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'O'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" rng"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("runanddraw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("h4",{attrs:{id:"class-status-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-status-value"}},[e._v("#")]),e._v(" class Status(value)")]),e._v(" "),a("p",[e._v("ReacNetGenerator status.")]),e._v(" "),a("p",[e._v("The ReacNetGenerator consists of several modules and algorithms to\nprocess the information from the given trajectory, including:")]),e._v(" "),a("blockquote",[a("p",[e._v("DOWNLOAD: Download trajectory from urls\nDETECT: Read bond information and detect molecules\nHMM: HMM filter\nPATH: Indentify isomers and collect reaction paths\nMATRIX: Reaction matrix generation\nNETWORK: Draw reaction network\nREPORT: Generate analysis report")])]),e._v(" "),a("h4",{attrs:{id:"draw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#draw"}},[e._v("#")]),e._v(" draw()")]),e._v(" "),a("p",[e._v("Draw the reaction network, i.e. NETWORK step.")]),e._v(" "),a("p",[e._v("None")]),e._v(" "),a("h4",{attrs:{id:"report"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#report"}},[e._v("#")]),e._v(" report()")]),e._v(" "),a("p",[e._v("Generate the analysis report, i.e. REPORT step.")]),e._v(" "),a("p",[e._v("None")]),e._v(" "),a("h4",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[e._v("#")]),e._v(" run()")]),e._v(" "),a("p",[e._v("Process MD trajectory, including DOWNLOAD, DETECT, HMM, PATH, and MATRIX steps.")]),e._v(" "),a("p",[e._v("None")]),e._v(" "),a("h4",{attrs:{id:"runanddraw-run-true-draw-true-report-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runanddraw-run-true-draw-true-report-true"}},[e._v("#")]),e._v(" runanddraw(run=True, draw=True, report=True)")]),e._v(" "),a("p",[e._v("Analyze the trajectory from MD simulation.")]),e._v(" "),a("p",[e._v("run: bool, optional, default: True")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Process the trajectory or not, including DOWNLOAD, DETECT, HMM, PATH, and MATRIX steps.\n")])])]),a("p",[e._v("draw: bool, optional, default: True")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Draw the reaction network or not, i.e. NETWORK step.\n")])])]),a("p",[e._v("report: bool, optional, default: True")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Generate the analysis report, i.e. NETWORK step.\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);